[{"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningKey.js":"1","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningRhythm.js":"2","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/App.js":"3","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Evaluate.js":"4","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/HomePage.js":"5","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Practice.js":"6","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Battle.js":"7","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Competion.js":"8","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningWord.js":"9","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningSentence.js":"10","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/History.js":"11","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Chart.js":"12"},{"size":12486,"mtime":1607576334762,"results":"13","hashOfConfig":"14"},{"size":20181,"mtime":1607578112622,"results":"15","hashOfConfig":"14"},{"size":11196,"mtime":1607579116348,"results":"16","hashOfConfig":"14"},{"size":8550,"mtime":1607566999804,"results":"17","hashOfConfig":"14"},{"size":6250,"mtime":1607566999804,"results":"18","hashOfConfig":"14"},{"size":7998,"mtime":1607566999804,"results":"19","hashOfConfig":"14"},{"size":7265,"mtime":1607566999804,"results":"20","hashOfConfig":"14"},{"size":7359,"mtime":1607566999804,"results":"21","hashOfConfig":"14"},{"size":20609,"mtime":1607577006293,"results":"22","hashOfConfig":"14"},{"size":18388,"mtime":1607578105946,"results":"23","hashOfConfig":"14"},{"size":6434,"mtime":1607566999804,"results":"24","hashOfConfig":"14"},{"size":2316,"mtime":1607566999804,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wqw9xp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningKey.js",[],["57","58"],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningRhythm.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/App.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Evaluate.js",["59","60","61"],"import React, { useState } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    alignItems: \"center\",\n  },\n  cardStyle: {\n    marginBottom: 20,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  evaluateStyle: {\n    width: \" 100%\",\n    height: \"100%\",\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(1, \"Frozen yoghurt\", \"male\", 159, \"1/1/2020\"),\n  createData(2, \"Ice cream sandwich\", \"female\", 237, \"1/1/2020\"),\n  createData(3, \"Eclair\", \"male\", 262, \"1/1/2020\"),\n  createData(4, \"Cupcake\", \"female\", 305, \"1/1/2020\"),\n  createData(6, \"Gingerbread\", \"male\", 356, \"1/1/2020\"),\n];\nconst Evaluate = () => {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [evalue, setEvalue] = useState(false);\n  const [value, setValue] = useState(\"female\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleOpenEvalue = () => {\n    setEvalue(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const bodyModal = (\n    <div style={modalStyle} className={classes.paper}>\n      <h5 id=\"simple-modal-title\">Give us some information</h5>\n      <Divider />\n      <div>\n        <TextField\n          id=\"standard-password-input\"\n          label=\"Full name\"\n          type=\"text\"\n          autoComplete=\"current-password\"\n        />\n      </div>\n      <FormControl component=\"fieldset\">\n        <RadioGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n        </RadioGroup>\n      </FormControl>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        Choose Level\n      </Typography>\n      <Slider\n        defaultValue={0.00000005}\n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        marks\n        min={0}\n        max={5}\n        valueLabelDisplay=\"auto\"\n      />\n\n      <Button size=\"small\" color=\"danger\" onClick={handleClose}>\n        Back\n      </Button>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={handleOpenEvalue}\n      >\n        GO\n      </Button>\n    </div>\n  );\n  const evaluateModal = (\n    <div style={modalStyle}>\n      <p>kkkkk</p>\n    </div>\n  );\n  return (\n    <Card>\n      <CardContent>\n        <div class=\"row\">\n          <div class=\"col-sm-7\">\n            <div style={{ marginLeft: 30, marginRight: 30 }}>\n            <h3>Đánh giá</h3>\n              <Card className={classes.cardStyle}>\n              \n                <CardContent>\n                  <CardMedia\n                    image=\"/static/images/cards/contemplative-reptile.jpg\"\n                    title=\"Contemplative Reptile\"\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Đánh giá tốc độ\n                    </Typography>\n                  </CardContent>\n                  <Button\n                    size=\"small\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={handleOpen}\n                  >\n                    Open\n                  </Button>\n                </CardContent>\n              </Card>\n\n              <Card className={classes.cardStyle}>\n                <CardContent>\n                  <CardMedia\n                    image=\"/static/images/cards/contemplative-reptile.jpg\"\n                    title=\"Contemplative Reptile\"\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Đánh giá theo thời gian\n                    </Typography>\n                  </CardContent>\n                  <Button\n                    size=\"small\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={handleOpen}\n                  >\n                    Open\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {bodyModal}\n          </Modal>\n          <Modal>{evaluateModal}</Modal>\n\n          <div class=\"col-sm-5\">\n            <h3>Bảng xếp hạng</h3>\n            <TableContainer\n              component={Paper}\n            >\n              <Table aria-label=\"collapsible table\">\n                <TableHead style={{backgroundColor:\"rgb(63, 81, 181)\"}}>\n                  <TableRow>\n                    <TableCell style={{color:\"white\"}}>No</TableCell>\n                    <TableCell style={{color:\"white\"}} align=\"center\">Name</TableCell>\n                    <TableCell style={{color:\"white\"}}  align=\"center\">Gender</TableCell>\n                    <TableCell style={{color:\"white\"}} align=\"center\">Point</TableCell>\n                    <TableCell style={{color:\"white\"}} align=\"center\">Time</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row) => (\n                    <TableRow key={row.name}>\n                      <TableCell>{row.name}</TableCell>\n                      <TableCell className={classes.root}>\n                        <Avatar className={classes.orange}>N</Avatar>\n                        {row.calories}\n                      </TableCell>\n                      <TableCell align=\"center\">{row.fat}</TableCell>\n                      <TableCell align=\"center\">{row.carbs}</TableCell>\n                      <TableCell align=\"center\">{row.protein}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Evaluate;\n",["62","63"],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/HomePage.js",["64","65","66"],"import React, { Component } from \"react\";\nimport { Box, Button, Container, Grid } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport bg from \"../image/69.jpg\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TextField from '@material-ui/core/TextField';\nexport class HomePage extends Component {\n  render() {\n    return (\n      <div>\n\n        <div\n          style={{\n            width: \"1903px\",\n            height: \"100vh\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            backgroundImage: \"url(\" + bg + \")\",\n          }}\n        >\n          <Container maxWidth=\"md\">\n            <Box p=\"24px\" mt=\"250px\" style={{ marginLeft: \"50px\" }}>\n              <Typography variant=\"h1\" gutterBotton>\n                Tốc kí trong tầm tay\n              </Typography>\n              <TextField color=\"secondary\" variant=\"outlined\" style={{ width: \"800px\", marginTop: \"20px\" }} label=\"Search something in website\"></TextField>\n              <Grid container spacing={3} style={{ marginTop: \"25px\" }}>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={3}>\n\n                  <Link to=\"/learning\">\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Bắt đầu học\n                  </Button>\n                  </Link>\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={3}>\n                  <a href=\"#quytacgo\">\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Quy tắc gõ\n                  </Button>\n                  </a>\n                </Grid>\n                <Grid item xs={2}></Grid>\n              </Grid>\n            </Box>\n          </Container>\n        </div>\n        <Container maxWidth=\"md\" style={{ marginTop: \"120vh\" }} id=\"quytacgo\">\n          <Box\n            bgcolor=\"white\"\n            boxShadow=\"3\"\n            borderRadius=\"2px\"\n            p=\"24px\"\n            mt=\"15px\"\n            style={{ marginBottom: \"70px\" }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Làm thế nào để thuộc được các chữ cái trên bàn phím steno\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              Chào mừng bạn đã đến với Tốc kí trong tầm tay. Trang web tốc ký hỗ\n              trợ người học cải thiện các kỹ năng bàn phím, tốc độ gõ và độ\n              chính xác bấm phím. Các bạn sẽ học cả cách phối hợp tư duy – hành\n              động theo chu trình thực hiện – đánh giá: kết hợp mắt với tay, kết\n              hợp trí nhớ và phản xạ cơ tay. Đây là yếu tố quyết định để bạn\n              luyện gõ tốc ký thuần thục.\n            </Typography>\n            <Divider />\n            <Typography variant=\"h6\" gutterBottom style={{ marginTop: \"20px\" }}>\n              Làm thế nào để việc học tốc ký trở nên vui vẻ?\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              Người dùng sẽ trải qua các thử thách có độ khó tăng dần và nhận\n              được điểm số khi hoàn thành vòng chơi. Một cách tuyệt vời để làm\n              cho các bài học trên bàn phím trở nên thú vị và tạo động lực hơn\n              là biến mỗi bài học bàn phím thành VideoGame WPM bằng cách khuyến\n              khích người chơi gõ nhanh nhất có thể. Game tốc ký giúp người chơi\n              thực hành các kỹ năng gõ bàn phím steno của họ bằng cách thách\n              thức họ luyện tập chăm chỉ hơn để đạt được từng mục tiêu. Chìa\n              khóa để khuyến khích người chơi tham gia là đưa ra phản hồi tích\n              cực và cho họ một vài cơ hội để cố gắng đánh bại wpm cao nhất của\n              chính họ.\n            </Typography>\n            <Divider />\n            <Typography variant=\"h6\" gutterBottom style={{ marginTop: \"20px\" }}>\n              Làm thế nào để thu hút người học gõ tốc ký?\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              Trong phạm vi bài học tốc ký của chúng tôi, người dùng được học vị\n              trí đặt ngón tay, thuộc được các âm cấu tạo nên từ, cách viết.\n              Ngoài những kỹ năng cốt lõi này, trang web của chúng tôi cũng chú\n              ý đến việc học các kỹ năng chính tả cần thiết. Học gõ tốc ký sẽ\n              giảm sự thú vị nếu người dùng chỉ tự học một mình. Vì vậy chúng\n              tôi đã nghĩ: Tại sao không để người dùng thi đấu với nhau? Đây là\n              ý tưởng cho sự phát triển của trang web học gõ tốc ký này.\n            </Typography>\n            <Divider />\n            <Typography variant=\"h6\" gutterBottom style={{ marginTop: \"20px\" }}>\n              Những lợi ích mang lại cho người dùng:\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              -Tăng tốc độ gõ từ mỗi phút và độ chính xác.\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              -Cải thiện độ linh hoạt của các ngón tay thông qua việc rèn luyện\n              trí nhớ - phản xạ cơ tay.\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              -Cải thiện phối hợp tay – mắt.\n            </Typography>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Practice.js",[],["67","68"],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Battle.js",["69","70","71"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  Button,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  withStyles,\n} from \"@material-ui/core\";\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(id, participants, tests_taken, time_left) {\n  return { id, participants, tests_taken, time_left };\n}\n\nconst rows = [\n  createData(\"12315641\", 34, 54, \"12m\"),\n  createData(\"75615462\", 18, 37, \"17m\"),\n  createData(\"21564321\", 140, 320, \"1h\"),\n  createData(\"21542316\", 6, 12, \"1h\"),\n  createData(\"13154564\", 66, 139, \"2h\"),\n];\n\nconst useStyles1 = makeStyles(() => ({\n  table: {\n    minWidth: 700,\n  },\n}));\nfunction CustomizedTables() {\n  const classes = useStyles1();\n\n  return (\n    <Card>\n      <CardContent>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Số người tham gia\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Số lượng kiểm tra đã thực hiện\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  Thời gian còn lại\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <StyledTableRow key={row.id}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                    <Link to=\"competition\">\n                      <Button\n                        variant=\"outlined\"\n                        color=\"white\"\n                        className={classes.button}\n                        startIcon={<ArrowRightIcon />}\n                        size=\"small\"\n                        style={{ marginLeft: \"10px\" }}\n                      >\n                        Tham gia\n                      </Button>\n                    </Link>\n                  </StyledTableCell>\n\n                  <StyledTableCell align=\"right\">\n                    {row.participants}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {row.tests_taken}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                    {row.time_left}\n                  </StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n}\nconst times = [\n  {\n    value: \"0\",\n    label: \"30 phút\",\n  },\n  {\n    value: \"1\",\n    label: \"1 giờ\",\n  },\n  {\n    value: \"2\",\n    label: \"3 giờ\",\n  },\n  {\n    value: \"3\",\n    label: \"12 giờ\",\n  },\n  {\n    value: \"4\",\n    label: \"1 ngày\",\n  },\n];\nfunction SelectTextField(props) {\n  //console.log(props.orderStatusValue);\n  const [time, setTime] = React.useState(\"0\");\n\n  const handleChange = (event) => {\n    setTime(event.target.value);\n  };\n\n  return (\n    <div>\n      <TextField\n        id=\"standard-select-currency-native\"\n        select\n        value={time}\n        fullWidth\n        onChange={handleChange}\n        SelectProps={{\n          native: true,\n        }}\n      >\n        {times.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n    </div>\n  );\n}\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nfunction SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab icon={<PersonIcon />} label=\"Tham gia\" {...a11yProps(0)} />\n          <Tab icon={<AddIcon />} label=\"Tạo mới\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CustomizedTables />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Container maxWidth=\"sm\">\n          <Box\n            bgcolor=\"white\"\n            boxShadow=\"2\"\n            borderRadius=\"15px\"\n            p=\"8px\"\n            mt=\"0px\"\n          >\n            <Typography\n              variant=\"subtitle2\"\n              display=\"block\"\n              gutterBottom\n              style={{ textAlign: \"left\", marginTop: 10 }}\n            >\n              Thời gian\n            </Typography>\n            <SelectTextField />\n            <FormControlLabel\n              control={<Checkbox />}\n              label=\"Tạo một cuộc thi riêng\"\n              fullWidth\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<AddIcon />}\n              style={{ marginLeft: \"170px\", marginTop: \"15px\" }}\n            >\n              Bắt đầu cuộc thi\n            </Button>\n          </Box>\n        </Container>\n      </TabPanel>\n    </div>\n  );\n}\n\nclass Battle extends Component {\n  render() {\n    return (\n      <div>\n        <SimpleTabs />\n      </div>\n    );\n  }\n}\n\nexport default Battle;\n",["72","73"],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Competion.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningWord.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/LearningSentence.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/History.js",[],"/home/hoangquoctrung/Documents/GDTNND/tockidotcom/src/Components/Chart.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":10,"column":22,"nodeType":"81","messageId":"82","endLine":10,"endColumn":27},{"ruleId":"79","severity":1,"message":"83","line":10,"column":29,"nodeType":"81","messageId":"82","endLine":10,"endColumn":41},{"ruleId":"79","severity":1,"message":"84","line":99,"column":10,"nodeType":"81","messageId":"82","endLine":99,"endColumn":16},{"ruleId":"75","replacedBy":"85"},{"ruleId":"77","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":6,"column":27,"nodeType":"81","messageId":"82","endLine":6,"endColumn":33},{"ruleId":"79","severity":1,"message":"88","line":6,"column":35,"nodeType":"81","messageId":"82","endLine":6,"endColumn":41},{"ruleId":"79","severity":1,"message":"89","line":6,"column":43,"nodeType":"81","messageId":"82","endLine":6,"endColumn":48},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"87","line":12,"column":27,"nodeType":"81","messageId":"82","endLine":12,"endColumn":33},{"ruleId":"79","severity":1,"message":"88","line":12,"column":35,"nodeType":"81","messageId":"82","endLine":12,"endColumn":41},{"ruleId":"79","severity":1,"message":"89","line":12,"column":43,"nodeType":"81","messageId":"82","endLine":12,"endColumn":48},{"ruleId":"75","replacedBy":"92"},{"ruleId":"77","replacedBy":"93"},{"ruleId":"79","severity":1,"message":"94","line":15,"column":8,"nodeType":"81","messageId":"82","endLine":15,"endColumn":18},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'createStyles' is defined but never used.","'evalue' is assigned a value but never used.",["95"],["96"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",["95"],["96"],["95"],["96"],"'CardHeader' is defined but never used.","no-global-assign","no-unsafe-negation"]