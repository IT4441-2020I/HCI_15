[{"D:\\GDTNND\\tockidotcom\\src\\App.js":"1","D:\\GDTNND\\tockidotcom\\src\\Components\\Evaluate.js":"2","D:\\GDTNND\\tockidotcom\\src\\reportWebVitals.js":"3"},{"size":7032,"mtime":1606534574633,"results":"4","hashOfConfig":"5"},{"size":7831,"mtime":1606669436666,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1606534574635,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"5f2e4q",{"filePath":"11","messages":"12","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GDTNND\\tockidotcom\\src\\App.js",["15"],"import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route ,Link} from \"react-router-dom\";\r\nimport Practice from \"./Components/Practice\";\r\nimport Learning from \"./Components/Learning\";\r\nimport Battle from \"./Components/Battle\";\r\nimport History from \"./Components/History\";\r\nimport Evaluate from \"./Components/Evaluate\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Tốc ký trong tầm tay\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link to=\"/learning\" style={{textDecoration:\"none\",color:\"black\"}}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Học gõ\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link to=\"/practice\" style={{textDecoration:\"none\",color:\"black\"}}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Luyện tập\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link to=\"/battle\" style={{textDecoration:\"none\",color:\"black\"}}>\r\n          <ListItem button >\r\n            <ListItemIcon>\r\n              <InboxIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Thi đấu\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link to=\"/evaluate\" style={{textDecoration:\"none\",color:\"black\"}}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <InboxIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Đánh giá\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link to=\"/history\" style={{textDecoration:\"none\",color:\"black\"}}>\r\n          <ListItem button >\r\n            <ListItemIcon>\r\n              <InboxIcon /> \r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Lịch sử\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n          <Route path=\"/battle\">\r\n            <Battle />\r\n          </Route>\r\n          <Route path=\"/practice\">\r\n            <Practice />\r\n          </Route>\r\n          <Route path=\"/learning\">\r\n            <Learning />\r\n          </Route>\r\n          <Route path=\"/history\">\r\n            <History />\r\n          </Route>\r\n          <Route path=\"/evaluate\">\r\n            <Evaluate />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\GDTNND\\tockidotcom\\src\\Components\\Evaluate.js",["16","17","18","19","20","21"],"D:\\GDTNND\\tockidotcom\\src\\reportWebVitals.js",[],{"ruleId":"22","severity":1,"message":"23","line":2,"column":27,"nodeType":"24","messageId":"25","endLine":2,"endColumn":33},{"ruleId":"22","severity":1,"message":"26","line":1,"column":17,"nodeType":"24","messageId":"25","endLine":1,"endColumn":26},{"ruleId":"22","severity":1,"message":"27","line":5,"column":8,"nodeType":"24","messageId":"25","endLine":5,"endColumn":19},{"ruleId":"22","severity":1,"message":"28","line":11,"column":10,"nodeType":"24","messageId":"25","endLine":11,"endColumn":26},{"ruleId":"22","severity":1,"message":"29","line":12,"column":22,"nodeType":"24","messageId":"25","endLine":12,"endColumn":27},{"ruleId":"22","severity":1,"message":"30","line":12,"column":29,"nodeType":"24","messageId":"25","endLine":12,"endColumn":41},{"ruleId":"22","severity":1,"message":"31","line":20,"column":8,"nodeType":"24","messageId":"25","endLine":20,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'CardActions' is defined but never used.","'TextareaAutosize' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'FormLabel' is defined but never used."]