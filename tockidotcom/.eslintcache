[{"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Battle.js":"1","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\App.js":"2","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Competion.js":"3","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Chart.js":"4","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\LearningWord.js":"5","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Evaluate.js":"6"},{"size":7266,"mtime":1607584977101,"results":"7","hashOfConfig":"8"},{"size":12027,"mtime":1607589378643,"results":"9","hashOfConfig":"8"},{"size":8532,"mtime":1607584977101,"results":"10","hashOfConfig":"8"},{"size":2404,"mtime":1607575501959,"results":"11","hashOfConfig":"8"},{"size":21128,"mtime":1607585164460,"results":"12","hashOfConfig":"8"},{"size":8823,"mtime":1607344261614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"14dyhty",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Battle.js",["28","29","30"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormControlLabel,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(id, participants, tests_taken, time_left) {\r\n  return { id, participants, tests_taken, time_left };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"12315641\", 34, 54, \"12m\"),\r\n  createData(\"75615462\", 18, 37, \"17m\"),\r\n  createData(\"21564321\", 140, 320, \"1h\"),\r\n  createData(\"21542316\", 6, 12, \"1h\"),\r\n  createData(\"13154564\", 66, 139, \"2h\"),\r\n];\r\n\r\nconst useStyles1 = makeStyles(() => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\nfunction CustomizedTables() {\r\n  const classes = useStyles1();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"customized table\">\r\n            <TableHead style={{ backgroundColor: \"#3f51b5\", color: \"white\" }}>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                <TableCell style={{ color: \"white\" }} align=\"right\">\r\n                  Số người tham gia\r\n                </TableCell>\r\n                <TableCell style={{ color: \"white\" }} align=\"right\">\r\n                  Số lượng kiểm tra đã thực hiện\r\n                </TableCell>\r\n                <TableCell style={{ color: \"white\" }} align=\"right\">\r\n                  Thời gian còn lại\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <StyledTableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                    <Link to=\"competition\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"white\"\r\n                        className={classes.button}\r\n                        startIcon={<ArrowRightIcon />}\r\n                        size=\"small\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      >\r\n                        Tham gia\r\n                      </Button>\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.participants}</TableCell>\r\n                  <TableCell align=\"right\">{row.tests_taken}</TableCell>\r\n                  <TableCell align=\"right\">{row.time_left}</TableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\nconst times = [\r\n  {\r\n    value: \"0\",\r\n    label: \"30 phút\",\r\n  },\r\n  {\r\n    value: \"1\",\r\n    label: \"1 giờ\",\r\n  },\r\n  {\r\n    value: \"2\",\r\n    label: \"3 giờ\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"12 giờ\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"1 ngày\",\r\n  },\r\n];\r\nfunction SelectTextField(props) {\r\n  //console.log(props.orderStatusValue);\r\n  const [time, setTime] = React.useState(\"0\");\r\n\r\n  const handleChange = (event) => {\r\n    setTime(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id=\"standard-select-currency-native\"\r\n        select\r\n        value={time}\r\n        fullWidth\r\n        onChange={handleChange}\r\n        SelectProps={{\r\n          native: true,\r\n        }}\r\n      >\r\n        {times.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </TextField>\r\n    </div>\r\n  );\r\n}\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\nfunction SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"primary\"\r\n        >\r\n          <Tab icon={<PersonIcon />} label=\"Tham gia\" {...a11yProps(0)} />\r\n          <Tab icon={<AddIcon />} label=\"Tạo mới\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <CustomizedTables />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box\r\n            bgcolor=\"white\"\r\n            boxShadow=\"2\"\r\n            borderRadius=\"15px\"\r\n            p=\"8px\"\r\n            mt=\"0px\"\r\n          >\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              display=\"block\"\r\n              gutterBottom\r\n              style={{ textAlign: \"left\", marginTop: 10 }}\r\n            >\r\n              Thời gian\r\n            </Typography>\r\n            <SelectTextField />\r\n            <FormControlLabel\r\n              control={<Checkbox color=\"primary\" />}\r\n              label=\"Tạo một cuộc thi riêng\"\r\n              fullWidth\r\n            />\r\n            <br />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n              style={{ marginLeft: \"170px\", marginTop: \"15px\" }}\r\n            >\r\n              Bắt đầu cuộc thi\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Battle extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleTabs />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Battle;\r\n",["31","32"],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\App.js",["33"],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Competion.js",["34"],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Chart.js",["35"],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\LearningWord.js",[],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Evaluate.js",["36","37","38"],{"ruleId":"39","severity":1,"message":"40","line":12,"column":27,"nodeType":"41","messageId":"42","endLine":12,"endColumn":33},{"ruleId":"39","severity":1,"message":"43","line":12,"column":35,"nodeType":"41","messageId":"42","endLine":12,"endColumn":41},{"ruleId":"39","severity":1,"message":"44","line":12,"column":43,"nodeType":"41","messageId":"42","endLine":12,"endColumn":48},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":27,"nodeType":"41","messageId":"42","endLine":2,"endColumn":33},{"ruleId":"39","severity":1,"message":"49","line":7,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":7},{"ruleId":"39","severity":1,"message":"50","line":15,"column":8,"nodeType":"41","messageId":"42","endLine":15,"endColumn":18},{"ruleId":"39","severity":1,"message":"51","line":10,"column":22,"nodeType":"41","messageId":"42","endLine":10,"endColumn":27},{"ruleId":"39","severity":1,"message":"52","line":10,"column":29,"nodeType":"41","messageId":"42","endLine":10,"endColumn":41},{"ruleId":"39","severity":1,"message":"53","line":99,"column":10,"nodeType":"41","messageId":"42","endLine":99,"endColumn":16},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'Card' is defined but never used.","'CardHeader' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'evalue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]