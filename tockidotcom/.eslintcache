[{"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\index.js":"1","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Battle.js":"2","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Competion.js":"3","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\History.js":"4","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\App.js":"5","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Learning.js":"6"},{"size":588,"mtime":1606382783244,"results":"7","hashOfConfig":"8"},{"size":7043,"mtime":1606873718658,"results":"9","hashOfConfig":"8"},{"size":7593,"mtime":1606873236170,"results":"10","hashOfConfig":"8"},{"size":5724,"mtime":1606913518911,"results":"11","hashOfConfig":"8"},{"size":7396,"mtime":1606873388700,"results":"12","hashOfConfig":"8"},{"size":231,"mtime":1606382397420,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wyeo1y",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\index.js",[],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Battle.js",["27","28","29"],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Competion.js",[],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\History.js",[],"C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\App.js",["30"],"import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Practice from \"./Components/Practice\";\r\nimport Learning from \"./Components/Learning\";\r\nimport Battle from \"./Components/Battle\";\r\nimport History from \"./Components/History\";\r\nimport Evaluate from \"./Components/Evaluate\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Competion from \"./Components/Competion\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Tốc ký trong tầm tay\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link\r\n            to=\"/learning\"\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Học gõ\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            to=\"/practice\"\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Luyện tập\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/battle\" style={{ textDecoration: \"none\", color: \"black\" }}>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Thi đấu\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            to=\"/evaluate\"\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Đánh giá\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link\r\n            to=\"/history\"\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Lịch sử\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n        <Route path=\"/competition\">\r\n            <Competion />\r\n          </Route>\r\n          <Route path=\"/battle\">\r\n            <Battle />\r\n          </Route>\r\n          <Route path=\"/practice\">\r\n            <Practice />\r\n          </Route>\r\n          <Route path=\"/learning\">\r\n            <Learning />\r\n          </Route>\r\n          <Route path=\"/history\">\r\n            <History />\r\n          </Route>\r\n          <Route path=\"/evaluate\">\r\n            <Evaluate />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\duc.pt173030\\Desktop\\GDTNND\\tockidotcom\\src\\Components\\Learning.js",[],{"ruleId":"31","severity":1,"message":"32","line":12,"column":27,"nodeType":"33","messageId":"34","endLine":12,"endColumn":33},{"ruleId":"31","severity":1,"message":"35","line":12,"column":35,"nodeType":"33","messageId":"34","endLine":12,"endColumn":41},{"ruleId":"31","severity":1,"message":"36","line":12,"column":43,"nodeType":"33","messageId":"34","endLine":12,"endColumn":48},{"ruleId":"31","severity":1,"message":"32","line":2,"column":27,"nodeType":"33","messageId":"34","endLine":2,"endColumn":33},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used."]